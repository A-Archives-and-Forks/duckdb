# name: test/sql/logging/logging_buffer_size.test
# description: 
# group: [logging]

require noforcestorage

# By default we flush the logger automatically at certain sensible moments (most importantly, on Query End)
# for this test we want to disable automatic flushing to test the buffer size param  
statement ok
CALL enable_logging('QueryLog', storage_config={'buffer_size': 10, 'only_flush_on_full_buffer': true});

statement ok
SELECT 1 as a;

query I
SELECT count(*) FROM duckdb_logs
----
0

loop i 0 10

statement ok
SELECT 1 as a;

endloop

# We expect a single flush to have happened, e.g. 10 log entries
query I
SELECT count(*) FROM duckdb_logs
----
10

statement ok
CALL disable_logging()

statement ok
CALL truncate_duckdb_logs()

# Change logging to manualog log type
statement ok
CALL enable_logging('', level='trace', storage='memory', storage_config={'buffer_size': 3000, 'only_flush_on_full_buffer': true});

# Buffers aaaaalmost full
statement ok
SELECT write_log('hello from the connection log scope', level := 'error', scope := 'connection') from range(0,3000);

query I
SELECT count(*) FROM duckdb_logs()
----
0

# "it's only a wafer-thin mint"
statement ok
SELECT write_log('hello from the connection log scope', level := 'error', scope := 'connection');

# Buffer has expl.. been flushed
query I
SELECT count(*) FROM duckdb_logs() where type=''
----
3000

# Note that there is 1 log contexts: these did not overflow the log contexts buffer, but they need to be written out whenever
# the first log entry containing a context_id is flushed (i.e. on adding the 3rd log entry)
query I
SELECT count(*) FROM duckdb_log_contexts()
----
1
