# name: test/sql/logging/logging_file_bind_replace.test
# description: Test file-backed log storage with the duckdb_logs() and duckdb_log_contexts() functions
# group: [logging]

# Enable FileSystem logging to single csv file  
statement ok
pragma enable_logging(['FileSystem'], storage='file', storage_config={'path': '__TEST_DIR__/logging_file_bind_replace_log.csv'});

# Read some data to trigger FileSystem log
statement ok
FROM "data/csv/big_number.csv"

# We can't currently scan this, because it would cause an infinite loop of log writing 
statement error
FROM duckdb_logs
----
Invalid Input Error: Please disable logging before scanning the logging csv file to avoid duckdb getting stuck in infinite logging limbo

statement ok
pragma disable_logging;

# mode output_result

query IIIIII nosort describe_duckdb_logs
DESCRIBE FROM duckdb_logs;
----

query IIII
SELECT scope, fs, path, op FROM duckdb_logs_parsed('FileSystem') WHERE op='OPEN';
----
CONNECTION	LocalFileSystem	data/csv/big_number.csv	OPEN

statement ok
pragma truncate_duckdb_logs;

# Enable FileSystem logging to double csv file  
statement ok
pragma enable_logging(['FileSystem'], storage='file', storage_config={'entries_path': '__TEST_DIR__/logging_file_bind_replace_entries.csv', 'contexts_path': '__TEST_DIR__/logging_file_bind_replace_contexts.csv'});

# Read some data to trigger FileSystem log
statement ok
FROM "data/csv/big_number.csv"

# We can't currently scan this, because it would cause an infinite loop of log writing 
statement error
FROM duckdb_logs
----
Invalid Input Error: Please disable logging before scanning the logging csv file to avoid duckdb getting stuck in infinite logging limbo

statement ok
pragma disable_logging;

query IIIIII nosort describe_duckdb_logs
DESCRIBE FROM duckdb_logs
----

query IIII
SELECT scope, fs, path, op FROM duckdb_logs_parsed('FileSystem') WHERE op='OPEN';
----
CONNECTION	LocalFileSystem	data/csv/big_number.csv	OPEN

statement ok
pragma truncate_duckdb_logs;

# Now rerun with the in-memory storage to ensure everything matches up
statement ok
pragma enable_logging(['FileSystem'], storage='memory');

# Read some data to trigger FileSystem log
statement ok
FROM "data/csv/big_number.csv"

statement ok
pragma disable_logging;

query IIIIII nosort describe_duckdb_logs
DESCRIBE FROM duckdb_logs
----

query IIII
SELECT scope, fs, path, op FROM duckdb_logs_parsed('FileSystem') WHERE op='OPEN';
----
CONNECTION	LocalFileSystem	data/csv/big_number.csv	OPEN

statement ok
pragma truncate_duckdb_logs;

# Now rerun with all log types enabled 

statement ok
pragma enable_logging(level='trace', storage='memory');

# Read some data to trigger FileSystem log
statement ok
FROM "data/csv/big_number.csv"

statement ok
pragma disable_logging;

query IIIIII nosort describe_duckdb_logs
DESCRIBE FROM duckdb_logs
----

query IIII
SELECT scope, fs, path, op FROM duckdb_logs_parsed('FileSystem') WHERE op='OPEN';
----
CONNECTION	LocalFileSystem	data/csv/big_number.csv	OPEN
